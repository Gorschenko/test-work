services:
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - ${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}
    volumes:
      - ${KAFKA_HOST_PATH_TO_JAAS_CONF}:${KAFKA_PATH_TO_JAAS_CONF}
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${ZK_HOST}:${ZK_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:${KAFKA_INTERNAL_PROTOCOL},EXTERNAL:${KAFKA_EXTERNAL_PROTOCOL}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://${KAFKA_INTERNAL_HOST}:${KAFKA_INTERNAL_PORT},EXTERNAL://${KAFKA_EXTERNAL_HOST}:${KAFKA_EXTERNAL_PORT}
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: ${KAFKA_SASL_MECHANISMS}
      KAFKA_SASL_ENABLED_MECHANISMS: ${KAFKA_SASL_MECHANISMS}
      KAFKA_AUTHORIZER_CLASS_NAME: ${KAFKA_AUTHORIZER_CLASS_NAME}
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: ${KAFKA_ACL_IS_DISABLED}
      KAFKA_OPTS:
        -Djava.security.auth.login.config=${KAFKA_PATH_TO_JAAS_CONF}
      KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
        
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    restart: always 
    depends_on:
      - zookeeper
  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:latest
    ports:
      - ${KAFKA2_EXTERNAL_PORT}:${KAFKA2_EXTERNAL_PORT}
    volumes:
      - ${KAFKA_HOST_PATH_TO_JAAS_CONF}:${KAFKA_PATH_TO_JAAS_CONF}
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: ${ZK_HOST}:${ZK_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:${KAFKA_INTERNAL_PROTOCOL},EXTERNAL:${KAFKA_EXTERNAL_PROTOCOL}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://${KAFKA2_INTERNAL_HOST}:${KAFKA2_INTERNAL_PORT},EXTERNAL://${KAFKA2_EXTERNAL_HOST}:${KAFKA2_EXTERNAL_PORT}
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: ${KAFKA_SASL_MECHANISMS}
      KAFKA_SASL_ENABLED_MECHANISMS: ${KAFKA_SASL_MECHANISMS}
      KAFKA_AUTHORIZER_CLASS_NAME: ${KAFKA_AUTHORIZER_CLASS_NAME}
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: ${KAFKA_ACL_IS_DISABLED}
      KAFKA_OPTS:
        -Djava.security.auth.login.config=${KAFKA_PATH_TO_JAAS_CONF}
      KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    restart: always
    depends_on:
      - zookeeper
  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka:latest
    ports:
      - ${KAFKA3_EXTERNAL_PORT}:${KAFKA3_EXTERNAL_PORT}
    volumes:
      - ${KAFKA_HOST_PATH_TO_JAAS_CONF}:${KAFKA_PATH_TO_JAAS_CONF}
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: ${ZK_HOST}:${ZK_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:${KAFKA_INTERNAL_PROTOCOL},EXTERNAL:${KAFKA_EXTERNAL_PROTOCOL}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://${KAFKA3_INTERNAL_HOST}:${KAFKA3_INTERNAL_PORT},EXTERNAL://${KAFKA3_EXTERNAL_HOST}:${KAFKA3_EXTERNAL_PORT}
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: ${KAFKA_SASL_MECHANISMS}
      KAFKA_SASL_ENABLED_MECHANISMS: ${KAFKA_SASL_MECHANISMS}
      KAFKA_AUTHORIZER_CLASS_NAME: ${KAFKA_AUTHORIZER_CLASS_NAME}
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: ${KAFKA_ACL_IS_DISABLED}
      KAFKA_OPTS:
        -Djava.security.auth.login.config=${KAFKA_PATH_TO_JAAS_CONF}
      KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    restart: always
    depends_on:
      - zookeeper
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - ${ZK_PORT}:2181
    volumes:
      - ${ZK_HOST_PATH_TO_JAAS_CONF}:${ZK_PATH_TO_JAAS_CONF}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZK_PORT}
      KAFKA_OPTS:
        -Djava.security.auth.login.config=${ZK_PATH_TO_JAAS_CONF}
    restart: always
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - ${KAFKA_UI_PORT}:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_INTERNAL_HOST}:${KAFKA_INTERNAL_PORT},${KAFKA2_INTERNAL_HOST}:${KAFKA2_INTERNAL_PORT},${KAFKA3_INTERNAL_HOST}:${KAFKA3_INTERNAL_PORT}
      KAFKA_CLUSTERS_0_ZOOKEEPER: ${ZK_HOST}:${ZK_PORT}
      # KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      # KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      # KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin";'
      AUTH_TYPE: LOGIN_FORM
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin
      
    restart: always
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - zookeeper